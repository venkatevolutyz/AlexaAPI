//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Alexa.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class evolutyzlabsuserEntities : DbContext
    {
        public evolutyzlabsuserEntities()
            : base("name=evolutyzlabsuserEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UsersProfile> UsersProfiles { get; set; }
        public virtual DbSet<AlexaDevice> AlexaDevices { get; set; }
    
        public virtual ObjectResult<AlexaWakeUp_Result> AlexaWakeUp(string deviceid)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlexaWakeUp_Result>("AlexaWakeUp", deviceidParameter);
        }
    
        public virtual int AlexaValidateOtp(string deviceid, Nullable<int> pin, ObjectParameter message)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexaValidateOtp", deviceidParameter, pinParameter, message);
        }
    
        public virtual ObjectResult<string> AlexaGetWorkingHoursDetails(Nullable<int> month, string deviceid)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AlexaGetWorkingHoursDetails", monthParameter, deviceidParameter);
        }
    
        public virtual ObjectResult<AlexaGetWorkingHoursDetails_JKTest2_Result> AlexaGetWorkingHoursDetails_JKTest2(Nullable<int> month, string deviceid)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlexaGetWorkingHoursDetails_JKTest2_Result>("AlexaGetWorkingHoursDetails_JKTest2", monthParameter, deviceidParameter);
        }
    
        public virtual int AlexaSubmitTimesheetdetails(Nullable<int> month, string deviceid, ObjectParameter timesheetSubmitted, ObjectParameter workinghours)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexaSubmitTimesheetdetails", monthParameter, deviceidParameter, timesheetSubmitted, workinghours);
        }
    
        public virtual int AlexaCheckStatus(string deviceid, Nullable<int> month, ObjectParameter status)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexaCheckStatus", deviceidParameter, monthParameter, status);
        }
    
        public virtual int AlexaCheckTimeSheetStatus(string deviceid, Nullable<int> month)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexaCheckTimeSheetStatus", deviceidParameter, monthParameter);
        }
    
        public virtual ObjectResult<AlexaSubmitUserTimesheetdetails_Result> AlexaSubmitUserTimesheetdetails(Nullable<int> month, string deviceid)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlexaSubmitUserTimesheetdetails_Result>("AlexaSubmitUserTimesheetdetails", monthParameter, deviceidParameter);
        }
    }
}
